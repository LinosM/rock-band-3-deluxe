(kState_RB3EControllerMenu
   (view options_extras)
   (enter
      {options_extras.lst set circular 0}
      {options_extras.lst set_selected 0}
      {options_extras.lst set_data
         (
            {if_else 
               {&&
                  {== $dx_joypad_type_guitar kControllerGuitar}
                  {== $dx_joypad_type_keys kControllerKeys}
                  {== $dx_joypad_type_vocals kControllerVocals}
               }
               os_instswap os_instreset}
            os_mappingswap
         )})
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_instswap
            {switch {{$this get_user} get_controller_type}
               (kControllerGuitar
                  {$this show_state kState_RB3EInstSwapGuitar})
               (kControllerKeys
                  {$this show_state kState_RB3EInstSwapKeys})
               (kControllerVocals
                  {$this show_state kState_RB3EInstSwapVocals})})
         (os_instreset
            DX_RESET_INST_TYPES
            {overshell update_all})
         (os_mappingswap
            {$this show_state kState_RB3EMappingSwap})})
   (on_cancel
      {$this show_state kState_RB3ESettings}))
	  
(kState_RB3EMappingSwap
   (view options)
   (enter
      DX_OS_OPEN_MSG
      DX_INST_SWAP_DESC_GUITAR
      {options.lst set circular 0}
      {options.lst set_selected 0}
      {options.lst set_data 
         (
            os_pad
            os_rbguitar
            os_ghguitar
            os_rbdrums
            os_rb2drums
            os_ghdrums
         )})
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_pad
            {set $dx_joypad_pad_mapping joypad})
         (os_rbguitar
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 hx_guitar_ps3 #else ro_guitar_xbox #endif})
         (os_ghguitar
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 ro_guitar_ps3 #else ro_guitar_xbox #endif})
         (os_rbdrums
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 hx_drums_ps3 #else hx_drums_xbox #endif})
         (os_rb2drums
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 hx_drums_ps3 #else hx_drums_xbox_rb2 #endif})
         (os_ghdrums
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 ro_drums_ps3 #else ro_drums_xbox #endif})}
      {overshell update_all})
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3EControllerMenu}))
	  
(kState_RB3EInstSwapGuitar
   (view options)
   (enter
      DX_OS_OPEN_MSG
      DX_INST_SWAP_DESC_GUITAR
      {options.lst set circular 0}
      {options.lst set_selected 0}
      {options.lst set_data 
         (
            keys
            drums
            vocals
         )})
   (SELECT_MSG
      {switch {$component selected_sym}
         (keys
            {set $dx_joypad_type_guitar kControllerKeys})
         (drums
            {set $dx_joypad_type_guitar kControllerDrum})
         (vocals
            {set $dx_joypad_type_guitar kControllerVocals})}
      DX_OS_CLOSE_MSG
      {overshell update_all})
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3EControllerMenu}))
	  
(kState_RB3EInstSwapKeys
   (view options)
   (enter
      DX_OS_OPEN_MSG
      DX_INST_SWAP_DESC_KEYS
      {options.lst set circular 0}
      {options.lst set_selected 0}
      {options.lst set_data 
         (
            guitar
            drums
            vocals
         )})
   (SELECT_MSG
      {switch {$component selected_sym}
         (guitar
            {set $dx_joypad_type_keys kControllerGuitar})
         (drums
            {set $dx_joypad_type_keys kControllerDrum})
         (vocals
            {set $dx_joypad_type_keys kControllerVocals})}
      DX_OS_CLOSE_MSG
      {overshell update_all})
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3EControllerMenu}))
	  
(kState_RB3EInstSwapVocals
   (view options)
   (enter
      DX_OS_OPEN_MSG
      DX_INST_SWAP_DESC_VOCALS
      {options.lst set circular 0}
      {options.lst set_selected 0}
      {options.lst set_data 
         (
            guitar
            keys
            drums
         )})
   (SELECT_MSG
      {switch {$component selected_sym}
         (guitar
            {set $dx_joypad_type_vocals kControllerGuitar})
         (drums
            {set $dx_joypad_type_vocals kControllerDrum})
         (keys
            {set $dx_joypad_type_vocals kControllerKeys})}
      DX_OS_CLOSE_MSG
      {overshell update_all})
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3EControllerMenu}))