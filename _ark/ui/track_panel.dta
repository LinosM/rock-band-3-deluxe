#include ../dx/track/dx_track_handlers.dta
#include ../dx/track/dx_track_callback.dta
#define TRACK_END_FRAME
(1920)
#define TRACK_PANEL_HANDLERS
(#ifdef HX_WII (unload_async TRUE) #endif
   (enter
      {game add_sink $this}
      {$this dx_set_scoreboard_pos}
      {$this dx_set_solo_box_pos}
      {$this dx_set_star_display_pos}
      {$this dx_force_remote_vox}
      DX_ADD_SINKS
      DX_NO_BRE_HANDLER
      DX_ANGLE_RESET_HANDLER ;reset the track angle just to be safe
      #ifndef HX_WII {unless $dx_texloadonce DX_TEXTURE_RESET_HANDLER} #endif ;reset rb3 textures if no textures have been loaded yet
      #ifndef HX_WII DX_TRACK_TEXTURE_HANDLER #endif ;here is where we setup the custom track
      {$this
         set_showing
         {!
            {gamemode in_mode practice}}})
   (exit
      DX_ANIMATED_TASK_KILLER
      {game remove_sink $this})
   (unison_hit)
   (set_track_out)
   (set_track_in)
   (animate_track
      ($start $end $period $units))
   (animate_track_out)
   (animate_track_out_fast)
   (animate_track_in_fast)
   (finish_load
      {$this set_showing FALSE}
      {$this set_track_out})
   (intro_start
      {$this track_reset}
      {$this set_showing TRUE}
      {$this set_track_in})
   (intro_skip
      {$this track_reset}
      {$this set_showing TRUE}
      {$this set_track_out})
   (on_reset
      {beatmatch
         foreach_active_player
         $m
         {$m on_new_track}})
   (on_extend
      {$this play_intro}
      {if
         {&& {exists gamemode}
            {||
               {gamemode in_mode defaults} {gamemode in_mode qp_party_shuffle}
               {gamemode in_mode qp_coop} {gamemode in_mode campaign}
               {gamemode in_mode party_shuffle} {gamemode in_mode tour}
            }
         }
         {{coop_track_panel find crowd_meter} set_showing $dx_crowd_meter_visibility}
         {{coop_track_panel find scoreboard} set_showing $dx_score_meter_visibility}
         {if
            {||
               $dx_time_remaining
               {&& {== $dx_streak_counter single} {== $dx_num_active_instruments 1}}
               {&& {== $dx_streak_counter multi} {> $dx_num_active_instruments 0}}
            }
            {{{coop_track_panel find scoreboard} find tracker_band_display} find sb_bg.mesh set_showing TRUE} ;ensure that it is visible at a base level
            {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_showing TRUE} ;ensure that it is visible at a base level
            {{{coop_track_panel find scoreboard} find tracker_band_display} set_challenge_type kTrackerChallengeType_Streak} ;set tracker type to streak
            {{{coop_track_panel find scoreboard} find tracker_band_display} set_showing TRUE} ;ensure that it is visible at a base level
            {{{coop_track_panel find scoreboard} find tracker_band_display} set_local_pos_index 2 {+ {{{coop_track_panel find scoreboard} find tracker_band_display} get_local_pos_index 2} 1.35}} ;move it up a bit
            {{{coop_track_panel find scoreboard} find tracker_band_display} show os_blnk} ;fire the tracker's show trigger, defaulting it to os_blnk string
            {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_int 0 TRUE} ;set the value to 0 to start
         }
         {if $dx_time_remaining
            {if_else {== $dx_streak_counter off}
               {do
                  {{{coop_track_panel find scoreboard} find tracker_band_display} iterate Mesh $m {$m set_showing FALSE}} ;ensure that it is visible at a base level
                  {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_showing FALSE} ;ensure that it is visible at a base level
               }
               {do
                  {{{coop_track_panel find scoreboard} find tracker_band_display} iterate Mesh $m {$m set_showing TRUE}} ;ensure that it is visible at a base level
                  {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_showing TRUE} ;ensure that it is visible at a base level
               }
            }
            {dx_mtv_time_remaining_handler} ;this will set up a script to run itself every half a second
            {if $dx_moved_up
               {set $dx_moved_up FALSE}
               {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 {- {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} get_local_pos_index 2} 4.55}}
            }
            {unless $dx_moved_up
               {set $dx_moved_up TRUE}
               {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 {+ {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} get_local_pos_index 2} 4.55}}
            }
         }
      }
      {if
         {&&
            {exists gamemode}
            {gamemode get play_track_intro_sfx}}
         {$this play_seq track_beg.cue}}
         {if $dx_fc_glow
            {beatmatch foreach_active_player $player ;dx - add our custom fc checking callbacks to the currently loaded player
               {switch {{$player get_user} get_slot_num}
                  (0
                     {switch {$player instrument}
                        ((bass real_bass)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((keys real_keys)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((guitar real_guitar)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((drum real_drum)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find star_deploy.trig} trigger}
                        )
                        (vocals kDataUnhandled) ;lol vox
                     }
                  )
                  (1
                     {switch {$player instrument}
                        ((bass real_bass)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((keys real_keys)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((guitar real_guitar)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((drum real_drum)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find star_deploy.trig} trigger}
                        )
                        (vocals kDataUnhandled) ;lol vox
                     }
                  )
                  (2
                     {switch {$player instrument}
                        ((bass real_bass)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((keys real_keys)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((guitar real_guitar)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((drum real_drum)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find star_deploy.trig} trigger}
                        )
                        (vocals kDataUnhandled) ;lol vox
                     }
                  )
                  (3
                     {switch {$player instrument}
                        ((bass real_bass)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((keys real_keys)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((guitar real_guitar)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find star_deploy.trig} trigger}
                        )
                        ((drum real_drum)
                           {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find peak_state.trig} trigger}
                           {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find star_deploy.trig} trigger}
                        )
                        (vocals kDataUnhandled) ;lol vox
                     }
                  )
               }
            }
         }
         ))
{new
   TrackPanel
   coop_track_panel
   (dx_set_scoreboard_pos
      {{{coop_track_panel find scoreboard} find scoreboard.grp} set_local_pos $scoreboardpos_0 $scoreboardpos_1 $scoreboardpos_2}
   )
   (dx_set_star_display_pos
      {unless {&& {! $star_displaypos_0} {! $star_displaypos_1} {! $star_displaypos_2}}
         {{{{coop_track_panel find scoreboard} find star_display} find stars.grp} set_local_pos $star_displaypos_0 $star_displaypos_1 $star_displaypos_2}
      }
   )
   (dx_set_solo_box_pos
      {unless {&& {! $solo_boxpos_0} {! $solo_boxpos_1} {! $solo_boxpos_2}}
         {beatmatch foreach_active_player $player
            {switch {{$player get_user} get_slot_num}
               (0
                  {{{{find_obj {{get_track_panel} loaded_dir} track_0} find player_feedback} find feedback.grp} set_local_pos $solo_boxpos_0 $solo_boxpos_1 $solo_boxpos_2}
               )
               (1
                  {{{{find_obj {{get_track_panel} loaded_dir} track_1} find player_feedback} find feedback.grp} set_local_pos $solo_boxpos_0 $solo_boxpos_1 $solo_boxpos_2}
               )
               (2
                  {{{{find_obj {{get_track_panel} loaded_dir} track_2} find player_feedback} find feedback.grp} set_local_pos $solo_boxpos_0 $solo_boxpos_1 $solo_boxpos_2}
               )
               (3
                  {{{{find_obj {{get_track_panel} loaded_dir} track_3} find player_feedback} find feedback.grp} set_local_pos $solo_boxpos_0 $solo_boxpos_1 $solo_boxpos_2}
               )
            }
         }
      }
   )
   (dx_force_remote_vox
      {if_else {session_mgr is_local}
         {beatmatch foreach_active_player $player
            {if {== {$player instrument} vocals}
               {{{find_obj {{get_track_panel} loaded_dir} vocals} get vox_configuration} set remote $dx_force_remote_vox}
               {{{{get_track_panel} find vocals} find tubes.grp} set_showing {! $dx_force_remote_vox}}
               {{{{get_track_panel} find vocals} find tubes_milo.grp} set_showing {! $dx_force_remote_vox}}
               {{{{get_track_panel} find vocals} find tube_range.grp} set_showing {! $dx_force_remote_vox}}
               {{{{get_track_panel} find vocals} find pitched_effect01.grp} set_showing {! $dx_force_remote_vox}}
               {{{{get_track_panel} find vocals} find pitched_effect02.grp} set_showing {! $dx_force_remote_vox}}
               {{{{get_track_panel} find vocals} find pitch_mid_marker.grp} set_showing {! $dx_force_remote_vox}}
               {{{{get_track_panel} find vocals} find phoneme0.grp} set_showing {! $dx_force_remote_vox}}
               {{{{get_track_panel} find vocals} find phoneme1.grp} set_showing {! $dx_force_remote_vox}}
               {{{{get_track_panel} find vocals} find phoneme2.grp} set_showing {! $dx_force_remote_vox}}
               {{{find_obj {{get_track_panel} loaded_dir} vocals} get vox_configuration} milo_apply}
            }
         }
         ; allows 2+ vocalists in an online session to view the pitch window
         {beatmatch foreach_active_player $player
            {if {&& {== {$player instrument} vocals} {{$player get_user} is_local}}
               {{{find_obj {{get_track_panel} loaded_dir} vocals} get vox_configuration} set remote FALSE}
               {{{{get_track_panel} find vocals} find tubes.grp} set_showing TRUE}
               {{{{get_track_panel} find vocals} find tubes_milo.grp} set_showing TRUE}
               {{{{get_track_panel} find vocals} find tube_range.grp} set_showing TRUE}
               {{{{get_track_panel} find vocals} find pitched_effect01.grp} set_showing TRUE}
               {{{{get_track_panel} find vocals} find pitched_effect02.grp} set_showing TRUE}
               {{{{get_track_panel} find vocals} find pitch_mid_marker.grp} set_showing TRUE}
               {{{{get_track_panel} find vocals} find phoneme0.grp} set_showing TRUE}
               {{{{get_track_panel} find vocals} find phoneme1.grp} set_showing TRUE}
               {{{{get_track_panel} find vocals} find phoneme2.grp} set_showing TRUE}
               {{{find_obj {{get_track_panel} loaded_dir} vocals} get vox_configuration} milo_apply}
            }
         }
      }
   )
   ;(dx_set_crowd_meter_pos
   ;   {{coop_track_panel find crowd_meter} reset}
   ;   {{{coop_track_panel find crowd_meter} find crowd_meter_shell.grp} set_local_pos $crowd_meterpos_0 $crowd_meterpos_1 $crowd_meterpos_2}
   ;)
   (file
      "track/trackpanel.milo")
   TRACK_PANEL_HANDLERS}
{func
   get_track_panel
   {gamemode get track_panel}}
{set
   $playback_file
   ""}