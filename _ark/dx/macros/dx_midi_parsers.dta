{new
   MidiParser
   guitar_timer
   (track_name 'PART GUITAR')
   (inverted FALSE)
   (up FALSE)
   (append_length TRUE)
   (compress FALSE)
   (message_type midi_parser)
   (init
      {set
         [min_gap]
         4}
      {set
         [max_gap]
         10000}
   )
   (mp.up FALSE)
   (idle)
   (allowed_notes
         (96 97 98 99 100))
   (gem
      {unless $first_guitar_gem_tracked
         {set $first_guitar_gem_tracked TRUE}
         {set $first_guitar_gem_beat $mp.start}
         {push_back $guitar_note_tracker ("delay_0" 0 $first_guitar_gem_beat)}
         {set $tracked_break_num_guitar 1}
      }
      {if {&& {> $mp.prev_start 4} {< $mp.prev_start 10000}}
         {set $guitar_tracked_start $mp.start}
         {set $guitar_tracked_prev_end {- $guitar_tracked_start $mp.prev_start}}
         {push_back $guitar_note_tracker ({sprint "delay_" $tracked_break_num_guitar} $guitar_tracked_prev_end $guitar_tracked_start)}
         {set $guitar_note_tracker {array $guitar_note_tracker}}
         {set $tracked_break_num_guitar {+ $tracked_break_num_guitar 1}}
         ;{dx_log_writer TRUE $guitar_note_tracker}
      }
   )
}
{new
   MidiParser
   drum_timer
   (track_name 'PART DRUMS')
   (inverted FALSE)
   (up FALSE)
   (append_length TRUE)
   (compress FALSE)
   (message_type midi_parser)
   (init
      {set
         [min_gap]
         4}
      {set
         [max_gap]
         10000}
   )
   (mp.up FALSE)
   (idle)
   (gem
      {unless $first_drum_gem_tracked
         {set $first_drum_gem_tracked TRUE}
         {set $first_drum_gem_beat $mp.start}
         {push_back $drum_note_tracker ("delay_0" 0 $first_drum_gem_beat)}
         {set $tracked_break_num_drum 1}
      }
      {if {&& {> $mp.prev_start 4} {< $mp.prev_start 10000}}
         {set $drum_tracked_start $mp.start}
         {set $drum_tracked_prev_end {- $drum_tracked_start $mp.prev_start}}
         {push_back $drum_note_tracker ({sprint "delay_" $tracked_break_num_drum} $drum_tracked_prev_end $drum_tracked_start)}
         {set $drum_note_tracker {array $drum_note_tracker}}
         {set $tracked_break_num_drum {+ $tracked_break_num_drum 1}}
         ;{dx_log_writer TRUE $drum_note_tracker}
      }
   )
}
{new
   MidiParser
   bass_timer
   (track_name 'PART BASS')
   (inverted FALSE)
   (up FALSE)
   (append_length TRUE)
   (compress FALSE)
   (message_type midi_parser)
   (init
      {set
         [min_gap]
         4}
      {set
         [max_gap]
         10000}
   )
   (mp.up FALSE)
   (idle)
   (gem
      {unless $first_bass_gem_tracked
         {set $first_bass_gem_tracked TRUE}
         {set $first_bass_gem_beat $mp.start}
         {push_back $bass_note_tracker ("delay_0" 0 $first_bass_gem_beat)}
         {set $tracked_break_num_bass 1}
      }
      {if {&& {> $mp.prev_start 4} {< $mp.prev_start 10000}}
         {set $bass_tracked_start $mp.start}
         {set $bass_tracked_prev_end {- $bass_tracked_start $mp.prev_start}}
         {push_back $bass_note_tracker ({sprint "delay_" $tracked_break_num_bass} $bass_tracked_prev_end $bass_tracked_start)}
         {set $bass_note_tracker {array $bass_note_tracker}}
         {set $tracked_break_num_bass {+ $tracked_break_num_bass 1}}
         ;{dx_log_writer TRUE $bass_note_tracker}
      }
   )
}
{new
   MidiParser
   keys_timer
   (track_name 'PART KEYS')
   (inverted FALSE)
   (up FALSE)
   (append_length TRUE)
   (compress FALSE)
   (message_type midi_parser)
   (init
      {set
         [min_gap]
         4}
      {set
         [max_gap]
         10000}
   )
   (mp.up FALSE)
   (idle)
   (gem
      {unless $first_keys_gem_tracked
         {set $first_keys_gem_tracked TRUE}
         {set $first_keys_gem_beat $mp.start}
         {push_back $keys_note_tracker ("delay_0" 0 $first_keys_gem_beat)}
         {set $tracked_break_num_keys 1}
      }
      {if {&& {> $mp.prev_start 4} {< $mp.prev_start 10000}}
         {set $keys_tracked_start $mp.start}
         {set $keys_tracked_prev_end {- $keys_tracked_start $mp.prev_start}}
         {push_back $keys_note_tracker ({sprint "delay_" $tracked_break_num_keys} $keys_tracked_prev_end $keys_tracked_start)}
         {set $keys_note_tracker {array $keys_note_tracker}}
         {set $tracked_break_num_keys {+ $tracked_break_num_keys 1}}
         ;{dx_log_writer TRUE $keys_note_tracker}
      }
   )
}