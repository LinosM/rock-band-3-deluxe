;inside the ark
#define SONGPATH
(
   {song_mgr song_file_path {meta_performer song} "/../../gen/songs.dtb"} ;if we loaded a song from on disc, this is the location of the loaded songs.dta
)
;a dlc dta
#define SONGPATH2
(
   {song_mgr song_file_path {meta_performer song} "/../../songs.dta"} ;if we loaded a dlc song, this is the location of the loaded songs.dta
)
;on disc update
#define SONGPATH3
(
   {song_mgr song_file_path {meta_performer song} {sprint "/../../../dta_collection/gen/" {meta_performer song} ".dtb"}} ;if we loaded a dlc song that has an on disc update, we have to probe our lookup table
)
#define SONGPATH4
(
   {song_mgr song_file_path {meta_performer song} {sprint "/../../../dta_collection/dta_updates_collection/gen/" {meta_performer song} ".dtb"}} ;if we loaded a dlc song that has an on disc update, we have to probe our lookup table
)
#define SONGPATH5
(
   {sprint "songs/dta_collection/gen/" {meta_performer song} ".dtb"}
)
#define DX_MTV_SETUP_TEXT
(
   {{{gamemode get track_panel} find mtv_overlay} setup_text} ;refresh the mtv overlay
)
#define DX_MTV_BPM_HANDLER
(
   {if {&& {modifier_mgr is_modifier_active mod_dx_showbpm} $dx_mtvup}
      {set $dx_tmp {int {+ 0.5 {seconds_to_beat {/ {beatmatch get_song_ms} 1000}}}}}
      {set $dx_bpm_counter {* {* 60 {/ 1 {- {beat_to_seconds {+ $dx_tmp 1}} {beat_to_seconds $dx_tmp}}}} $speedmod}}
      DX_MTV_SETUP_TEXT
   }
)
#define DX_MTV_SET_POS_HANDLER
(
   (dx_set_mtv_pos
      {if_else {modifier_mgr is_modifier_active mod_fakejuke} ;check if fake jukebox mode is enabled
         {Group.grp set_local_pos 0 -30 -136} ;if it is, hard set the location of the mtv overlay for style
         {Group.grp set_local_pos $mtvpos_0 $mtvpos_1 $mtvpos_2} ;otherwise put it in the custom location
      }
   )
)
#define DX_ENTRY_SWITCH
(
   {switch $dx_entry_finder
      (author {set $authorvar {elem {find $entry $dx_entry_finder} 1}})
      (artist {set $artistvar {elem {find $entry $dx_entry_finder} 1}})
      (year_released {set $yearvar {elem {find $entry $dx_entry_finder} 1}})
      (album_name {set $albumvar {elem {find $entry $dx_entry_finder} 1}})
      (game_origin {set $sourcevar {elem {find $entry $dx_entry_finder} 1}})
      (genre {set $genrevar {elem {find $entry $dx_entry_finder} 1}})
   }
)
#define MTV_DTA_PREPPER
(
   {dx_log_writer {sprint "Attempting to read loaded song DTA. - Gamemode: " $dx_gamemode}}
   {unless $dx_readdtaonce
      {set $dx_readdtaonce TRUE}
      {set $dx_readadditionaldtaonce FALSE}
      {set $theactualpath FALSE}
      {if_else {file_exists SONGPATH2}
         {set $theactualpath SONGPATH2} ;a dlc dta
         {if_else {file_exists SONGPATH3}
            {set $theactualpath SONGPATH3} ;on disc update
            {if {file_exists SONGPATH}
               {set $theactualpath SONGPATH} ;inside the ark
            }
         }
      }
      {if_else $theactualpath
         {do
            {set $songdtareader {read_file $theactualpath}} ;load the dta into memory
            {dx_log_writer {sprint "Found DTA path: " $theactualpath}}
         }
         {set $dx_path_failed}
      }
   }
)
#define MTV_DTA_READER
(
   {foreach $entry $songdtareader
      {if {== {elem $entry 0} {basename {meta_performer song}}}
         {if_else {find $entry $dx_entry_finder}
            DX_ENTRY_SWITCH
            {if {file_exists SONGPATH4}
               {do
                  ;{dx_log_writer {sprint "Didnt find " $dx_entry_finder " in base dta, reading - " SONGPATH4}}
                  {unless $dx_readadditionaldtaonce
                     {set $dx_readadditionaldtaonce TRUE}
                     {set $additionalreader {read_file SONGPATH4}}
                  }
                  {foreach $entry $additionalreader ;if we didnt find album_name there, we need to scan our updates dta
                     {if {== {elem $entry 0} {basename {meta_performer song}}} ;find the current song's shortname
                        {if {find $entry $dx_entry_finder} ;check for album_name again
                           {do
                              ;{dx_log_writer {sprint "Read updated DTA entry: " $dx_entry_finder}}
                              DX_ENTRY_SWITCH
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   }
)
#define MTV_MOD_WRITER
(
   {set $dx_tmp ""}
   {set $dx_tmp2 ""}
   {if {modifier_mgr is_modifier_active mod_fastermode}
      {set $dx_tmp2 {sprint $dx_tmp2 {localize mod_fastermode} " (" {int {'+' 0.5 {'*' $speedmod 100}}} "%) " }}
   }
   {if {modifier_mgr is_modifier_active mod_chmode}
      {set $dx_tmp2 {sprint $dx_tmp2 {if_else {!= $dx_tmp2 ""} " | " ""} "DRUNK MODE"}}
   }
   {if {&& {modifier_mgr is_modifier_active mod_auto_play} {! {modifier_mgr is_modifier_active mod_fakejuke}}}
      {set $dx_tmp2 {sprint $dx_tmp2 {if_else {!= $dx_tmp2 ""} " | " ""} "AUTOPLAY"}}
   }
   {if {modifier_mgr is_modifier_active mod_dx_showbpm}
      {set $dx_tmp2 {sprint $dx_tmp2 {if_else {!= $dx_tmp2 ""} " | " ""} "BPM: " $dx_bpm_counter}}
   }
   {if {&& {!= $speedmod 1.0} {! {modifier_mgr is_modifier_active mod_fastermode}}}
      {set $dx_tmp {sprint $dx_tmp " (" {int {'+' 0.5 {'*' $speedmod 100}}} "%)" }}
   }
   {if {!= $dx_tmp2 ""}
      {set $dx_tmp {sprint $dx_tmp "\n" $dx_tmp2}}
   }
   {if_else {!= $dx_tmp ""}
      {song.lbl set_token_fmt {sprint $song_title $dx_tmp}}
      {song.lbl set_song_name $short_name} ;if nothing else needs to be reported at all. just print the shortname
   }
)
#define MTV_SONG_WRITER
(
   {if {modifier_mgr is_modifier_active mod_fakejuke} ;if fake jukebox mode is enabled
       {set $authorvar FALSE} ;just completely disregard the author so our next script lands in the correct spot
   }
   {unless $dx_hmxcheckedonce
      {set $dx_hmxcheckedonce TRUE}
      {if {file_exists {sprint "songs/dta_collection/gen/" {meta_performer song} ".dtb"}}
         {set $authorvar "Harmonix"}
      }
      DX_CURRENT_SONG_WRITER
      {if_else $yearvar
         {dx_song_writer {sprint "Song Loaded: " $song_title " - " $artistvar ", " $yearvar " - Album: " $albumvar " - Genre: " $genrevar " - Source: " {localize $sourcevar} " - Authored By: " $authorvar} " - Gamemode: " $dx_gamemode}
         {if_else $authorvar
            {dx_log_writer {sprint "Song Loaded: " $song_title " - " $artistvar " - Authored By: " $authorvar} " - Gamemode: " $dx_gamemode}
            {if_else $artistvar
               {dx_log_writer {sprint "Song Loaded: " $song_title " - " $artistvar} " - Gamemode: " $dx_gamemode}
               {dx_log_writer {sprint "Song Loaded: " $song_title} " - Gamemode: " $dx_gamemode}
            }
         }
      }
   }
   {if_else {&& $authorvar {modifier_mgr is_modifier_active mod_songtitlestats}};check if we have a valid author currently loaded
      {artist.lbl set_token_fmt {sprint $artistvar ", " $yearvar "\n" $albumvar "\n" {localize author} ": " $authorvar}} ;if yes to author and detailed info, print everything we have
      {if_else {&& {! $authorvar} {modifier_mgr is_modifier_active mod_songtitlestats}};check if we have a valid author currently loaded
         {artist.lbl set_token_fmt {sprint $artistvar ", " $yearvar "\n" $albumvar "\n"}} ;if yes to author and detailed info, print everything we have
         {if_else {&& $authorvar {! {modifier_mgr is_modifier_active mod_songtitlestats}}}
            {artist.lbl set_token_fmt {sprint $artistvar "\n" {localize author} ": " $authorvar}} ;if yes to author and detailed info, print everything we have
            {if_else {&& {! $authorvar} {! {modifier_mgr is_modifier_active mod_songtitlestats}}}
               {artist.lbl set_token_fmt {sprint $artistvar}} ;if detailed but no author present (fake jukebox) print what we do have
               {artist.lbl set_token_fmt {sprint $artistvar ", " $yearvar "\n" $albumvar "\n" {localize author} ": " $authorvar}} ;if detailed but no author present (fake jukebox) print what we do have
            }
         }
      }
   }
)
#define MTV_WRITER_CHOOSER
(
   #ifndef HX_WII
   {if
      {||
         {gamemode in_mode defaults} {gamemode in_mode qp_party_shuffle}
         {gamemode in_mode qp_coop} {gamemode in_mode campaign}
         {gamemode in_mode party_shuffle} {gamemode in_mode tour}
         {gamemode in_mode practice} {gamemode in_mode qp_practice}
      }
      {unless
         {||
            $dx_ps3hw ; don't run on ps3 hardware
            $dx_path_failed
         }
         {do
            {unless $dx_mtv_dta_reader_once
            {set $dx_mtv_dta_reader_once TRUE}
            {set $dx_entry_finder artist} MTV_DTA_READER
            {set $dx_entry_finder author} MTV_DTA_READER
            {if {|| {modifier_mgr is_modifier_active mod_songtitlestats} {modifier_mgr is_modifier_active mod_fakejuke}}
                  {do
                     {set $dx_entry_finder year_released}
                     MTV_DTA_READER
                     {set $dx_entry_finder album_name}
                     MTV_DTA_READER
                     {set $dx_entry_finder genre}
                     MTV_DTA_READER
                     {set $dx_entry_finder game_origin}
                     MTV_DTA_READER
                  }
               }
            }
            {if {exists song.lbl}
               MTV_MOD_WRITER
            }
            {if {exists artist.lbl}
               MTV_SONG_WRITER
            }
         }
      }
   }
   {if
      {||
         $dx_ps3hw ; don't run on ps3 hardware
         $dx_path_failed
      }
      {do
         {unless $dx_author_finder_failed
            {set $dx_author_finder_failed TRUE}
            {dx_log_writer {sprint "Author Finder Failed - Song Loaded: " $song_title} " - Gamemode: " $dx_gamemode}
         }
         {if
            {exists song.lbl}
            MTV_MOD_WRITER
         }
         {if
            {exists artist.lbl}
            {artist.lbl set_artist_name_from_shortname $short_name}
         }
      }
   }
   #else
   {do
      {if
         {exists song.lbl}
         MTV_MOD_WRITER
      }
      {if
         {exists artist.lbl}
         {artist.lbl set_artist_name_from_shortname $short_name}
      }
   }
   #endif
)