#define DX_SET_CONTROLLER_MENU
(
   {do
      ($options
         {array 0})
      {if_else 
         {&&
            {== $dx_joypad_type_guitar kControllerGuitar}
            {== $dx_joypad_type_keys kControllerKeys}
            {== $dx_joypad_type_vocals kControllerVocals}}
         {do
            {push_back $options os_instswap}
            {set $dx_menu_message os_instswap_desc}}
         {do
            {push_back $options os_instreset} ;shows controller reset menu if at least one instrument faking is active
            {set $dx_menu_message os_instreset_desc}}}
      {push_back $options os_pad_mapping}
      $options}
)

(kState_RB3EControllerMenu
   (view options_end_game)
   (enter
      DX_OS_OPEN_MSG
      {options_end_game.lst set_data DX_SET_CONTROLLER_MENU}
      {options_end_game.lst set circular 0}
      {options_end_game.lst set_selected 0}
      DX_MENU_DESC
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_instswap
            {switch {{$this get_user} get_controller_type}
               (kControllerGuitar
                  {$this show_state kState_RB3EInstSwapGuitar})
               (kControllerKeys
                  {$this show_state kState_RB3EInstSwapKeys})
               (kControllerVocals
                  {$this show_state kState_RB3EInstSwapVocals})})
         (os_instreset
            DX_OS_CLOSE_MSG
            DX_RESET_INST_TYPES
            {$this show_state kState_RB3ESettings} ;force closes the menu if a different player resets the controllers
            {overshell update_all})
         (os_pad_mapping
            {$this show_state kState_RB3EPadMappingSwap})})	
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3ESettings}))
	  
(kState_RB3EPadMappingSwap
   (view options_audio)
   (enter
      DX_OS_OPEN_MSG
      {set $dx_menu_message os_pad_mapping_select_desc}
      DX_MENU_DESC
      {options_audio.lst set circular 0}
      {options_audio.lst set_selected 0}
      {options_audio.lst set_data 
         (
            os_pad
            os_rbguitar
            os_ghguitar
            os_rbdrums
            os_rb2drums
            os_ghdrums
         )})
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_pad
            {set $dx_joypad_pad_mapping joypad})
         (os_rbguitar
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 hx_guitar_ps3 #else #ifdef HX_WII wii_guitar #else ro_guitar_xbox #endif})
         (os_ghguitar
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 ro_guitar_ps3 #else #ifdef HX_WII wii_guitar #else ro_guitar_xbox #endif})
         (os_rbdrums
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 hx_drums_ps3 #else #ifdef HX_WII wii_drums #else hx_drums_xbox #endif})
         (os_rb2drums
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 hx_drums_ps3 #else #ifdef HX_WII wii_drums #else hx_drums_xbox_rb2 #endif})
         (os_ghdrums
            {set $dx_joypad_pad_mapping #ifdef HX_PS3 ro_drums_ps3 #else #ifdef HX_WII wii_rodrums #else ro_drums_xbox #endif})}
      DX_REMAP_PAD
   )
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3EControllerMenu}))
	  
(kState_RB3EInstSwapGuitar
   (view options)
   (enter
      DX_OS_OPEN_MSG
      {set $dx_menu_message os_instswap_menu_guitar_desc}
      DX_MENU_DESC
      {options.lst set circular 0}
      {options.lst set_selected 0}
      {options.lst set_data (keys drums vocals)})
   (SELECT_MSG
      DX_RESET_INST_TYPES ;resets all instruments to default before faking a new one
      {switch {$component selected_sym}
         (keys
            {set $dx_joypad_type_guitar kControllerKeys})
         (drums
            {set $dx_joypad_type_guitar kControllerDrum})
         (vocals
            {set $dx_joypad_type_guitar kControllerVocals})}
      {dx_log_writer {sprint "Guitar has been changed to - " $dx_joypad_type_guitar}}
      DX_OS_CLOSE_MSG
      {overshell update_all})
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3EControllerMenu}))
	  
(kState_RB3EInstSwapKeys
   (view options)
   (enter
      DX_OS_OPEN_MSG
      {set $dx_menu_message os_instswap_menu_keys_desc}
      DX_MENU_DESC
      {options.lst set circular 0}
      {options.lst set_selected 0}
      {options.lst set_data (guitar drums vocals)})
   (SELECT_MSG
      DX_RESET_INST_TYPES ;resets all instruments to default before faking a new one
      {switch {$component selected_sym}
         (guitar
            {set $dx_joypad_type_keys kControllerGuitar})
         (drums
            {set $dx_joypad_type_keys kControllerDrum})
         (vocals
            {set $dx_joypad_type_keys kControllerVocals})}
      {dx_log_writer {sprint "Keys has been changed to - " $dx_joypad_type_keys}}
      DX_OS_CLOSE_MSG
      {overshell update_all})
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3EControllerMenu}))
	  
(kState_RB3EInstSwapVocals
   (view options)
   (enter
      DX_OS_OPEN_MSG
      {set $dx_menu_message os_instswap_menu_vocals_desc}
      DX_MENU_DESC
      {options.lst set circular 0}
      {options.lst set_selected 0}
      {options.lst set_data (guitar keys drums)})
   (SELECT_MSG
      DX_RESET_INST_TYPES ;resets all instruments to default before faking a new one
      {switch {$component selected_sym}
         (guitar
            {set $dx_joypad_type_vocals kControllerGuitar})
         (drums
            {set $dx_joypad_type_vocals kControllerDrum})
         (keys
            {set $dx_joypad_type_vocals kControllerKeys})}
      {dx_log_writer {sprint "Vocals has been changed to - " $dx_joypad_type_vocals}}
      DX_OS_CLOSE_MSG
      {overshell update_all})
   (on_cancel
      DX_OS_CLOSE_MSG
      {$this show_state kState_RB3EControllerMenu}))