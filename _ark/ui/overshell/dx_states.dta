(dxState_DeluxeSettings
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_spds}
         {push_back $options os_venuesel}
         {push_back $options os_thm}
         {push_back $options os_cam}
         {push_back $options os_audiomenu}
         #ifdef RB3E
         #ifndef RB3E_EMULATOR
         #ifdef HX_XBOX
         {push_back $options os_reboot}
         #endif
         #endif
         #endif
         ;only show the controller menu when not in-game and only on applicable instruments or when faking is active
         {if
            {&&
               {! {session is_in_game}} ;prevents soft-lock, swapping instrument type in-game would prevent player from rejoining
               {||
                  {||
                     {== {{$this get_user} get_controller_type} kControllerGuitar}
                     {== {{$this get_user} get_controller_type} kControllerKeys}
                     {== {{$this get_user} get_controller_type} kControllerVocals}
                  }
                  {||
                     {! {== $dx_joypad_type_guitar kControllerGuitar}}
                     {! {== $dx_joypad_type_keys kControllerKeys}}
                     {! {== $dx_joypad_type_vocals kControllerVocals}}
                  }
               }
               {push_back $options os_ctrlmenu}
            }
         }
         ;-----func----------state name---------message
         {dx_state_setup dxState_DeluxeSettings os_welcome_msg}
      }
      {overshell_view_chooser}
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC ;updates description with currently selected modifier
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_spds
            {$this show_state dxState_SpeedMenu})
         (os_thm
            {$this show_state dxState_AppearanceMenu})
         (os_venuesel
            {$this show_state dxState_VenueSelector})
         (os_cam
            {$this show_state dxState_CameraMenu})
         (os_audiomenu
            {$this show_state dxState_AudioSFX})
         (os_ctrlmenu
            {$this show_state dxState_ControllerMenu})
         (os_reboot
            {$this show_state kState_RebootWarn})
      }
   )
   (exit 
      {dx_state_pos_tracker}
      DX_OS_CLOSE_MSG
   )
	(on_cancel
	   {do
         ($options {array 0})
         {push_back $options overshell_invite}
         #ifdef HX_XBOX {push_back $options overshell_invite_xbox_party} #endif
         #ifdef HX_PS3 {push_back $options overshell_check_invites} #endif
         {push_back $options overshell_kick}
         {push_back $options #ifdef HX_XBOX overshell_gamercard #else overshell_mute #endif}
         {push_back $options overshell_disconnect}
         {online_options.lst set_data $options}
      }
      #ifndef HX_WII
      {if_else {modifier_mgr is_modifier_active mod_skipsavemsg}
         {if_else $dx_settings_error
            {$this show_state dxState_SaveWarnError}
            {do INIT_DX_WRITER {$this show_game_options}}
         }
         {$this show_state dxState_SaveWarn}
      }
      #else
      {$this show_game_options}
      #endif
   )
)
(dxState_VenueSelector
   (view
      {do
         ($options
            {array 0}
         )
         {push_back $options none}
         {push_back $options random}
         {push_back $options small_venues}
         {push_back $options big_venues}
         {push_back $options arena_venues}
         {push_back $options festival_venues}
         {push_back $options venues_video}
         ;these need to be listed individually for position tracker
         {push_back $options small_club_01}
         {push_back $options small_club_02}
         {push_back $options small_club_03}
         {push_back $options small_club_04}
         {push_back $options small_club_05}
         {push_back $options small_club_06}
         {push_back $options small_club_10}
         {push_back $options small_club_11}
         {push_back $options small_club_13}
         {push_back $options small_club_14}
         {push_back $options small_club_15}
         {push_back $options big_club_01}
         {push_back $options big_club_02}
         {push_back $options big_club_04}
         {push_back $options big_club_05}
         {push_back $options big_club_06}
         {push_back $options big_club_07}
         {push_back $options big_club_08}
         {push_back $options big_club_09}
         {push_back $options big_club_10}
         {push_back $options big_club_11}
         {push_back $options big_club_12}
         {push_back $options big_club_13}
         {push_back $options big_club_14}
         {push_back $options big_club_15}
         {push_back $options big_club_17}
         {push_back $options arena_01}
         {push_back $options arena_02}
         {push_back $options arena_03}
         {push_back $options arena_04}
         {push_back $options arena_06}
         {push_back $options arena_07}
         {push_back $options arena_10}
         {push_back $options arena_11}
         {push_back $options arena_12}
         {push_back $options festival_01}
         {push_back $options festival_02}
         {push_back $options video_01}
         {push_back $options video_02}
         {push_back $options video_03}
         {push_back $options video_04}
         {push_back $options video_05}
         {push_back $options video_06}
         {push_back $options video_07}
         ;-----func----------state name---------message
         {dx_state_setup dxState_VenueSelector FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {set $force TRUE}
      {set $venue {$component selected_sym}}
      {switch
         {$component selected_sym}
         (random
            {set $force FALSE} {set $venue VENUES})
         (small_venues
            {set $force TRUE} {set $venue small_venues})
         (big_venues
            {set $force TRUE} {set $venue big_venues})
         (arena_venues
            {set $force TRUE} {set $venue arena_venues})
         (festival_venues
            {set $force TRUE} {set $venue festival_venues})
         (venues_video
            {set $force TRUE} {set $venue venues_video})
         (none
            {set $force TRUE} {set $venue BLACK_VENUE})
      }
   )
   (exit 
      {dx_state_pos_tracker}
      DX_OS_CLOSE_MSG
   )
   (on_cancel
      {$this show_state dxState_DeluxeSettings}
   )
)

#define DX_BOT_SETTINGS_DATA
(
   {do
      ($options
         {array 0})
      {push_back $options os_dx_bot_skill}
      {push_back $options
         {switch $dx_bot_overdrive 
            (dx_on os_dx_bot_overdrive_on)
            (dx_off os_dx_bot_overdrive_off)
            (dx_drain os_dx_bot_overdrive_drain)
         }
      }
      {push_back $options {if_else $dx_auto_endgame os_dx_auto_endgame_on os_dx_auto_endgame_off}}
      {push_back $options {if_else $dx_bot_1 os_dx_bot_1_on os_dx_bot_1_off}}
      {push_back $options {if_else $dx_bot_2 os_dx_bot_2_on os_dx_bot_2_off}}
      {push_back $options {if_else $dx_bot_3 os_dx_bot_3_on os_dx_bot_3_off}}
      {push_back $options {if_else $dx_bot_4 os_dx_bot_4_on os_dx_bot_4_off}}
      {push_back $options {if_else $dx_bot_5 os_dx_bot_5_on os_dx_bot_5_off}}
      ;-----func----------state name---------message
      {dx_state_setup dxState_BotSettings FALSE}
      {set $dx_slider TRUE}
      {set $dx_slider_id dx_bot_skill}
      {instruments.sld set_num_steps 12}
      {instruments.sld set_current $dx_bot_skill}
   }
)
(dxState_BotSettings
   (view
      DX_BOT_SETTINGS_DATA
      {overshell_view_chooser}
   )
   (update_view
      {handle ($this update_slider instruments.sld "")}
      {handle ($this update_slider bg_music.sld "")}
      {handle ($this update_slider crowd.sld "")}
      {handle ($this update_slider sfx.sld "")}
      {handle ($this update_slider voice_chat.sld "")}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_dx_bot_skill
            {instruments.sld store}
            {instruments.sld set_showing TRUE}
            {$this set_focus instruments.sld}
         )
         ((os_dx_bot_overdrive_on os_dx_bot_overdrive_off os_dx_bot_overdrive_drain)
            {set $dx_bot_overdrive
               {switch $dx_bot_overdrive
                  (dx_on dx_drain)
                  (dx_drain dx_off)
                  (dx_off dx_on)
               }
            }
            {switch $dx_bot_overdrive
               (dx_on {set $dx_tracked_changed os_dx_bot_overdrive_on})
               (dx_drain {set $dx_tracked_changed os_dx_bot_overdrive_drain})
               (dx_off {set $dx_tracked_changed os_dx_bot_overdrive_off})
            }
            {dx_state_pos_tracker}
            DX_BOT_SETTINGS_DATA
            {set $previous_state dxState_BotSettings}
         )
         ((os_dx_bot_1_on os_dx_bot_1_off)
            {set $dx_bot_1 {! $dx_bot_1}}
            {if_else $dx_bot_1
               {set $dx_tracked_changed os_dx_bot_1_on}
               {set $dx_tracked_changed os_dx_bot_1_off}
            }
            {dx_state_pos_tracker}
            DX_BOT_SETTINGS_DATA
            {set $previous_state dxState_BotSettings}
         ) 
         ((os_dx_auto_endgame_on os_dx_auto_endgame_off)
            {set $dx_auto_endgame {! $dx_auto_endgame}}
            {if_else $dx_auto_endgame
               {set $dx_tracked_changed os_dx_auto_endgame_on}
               {set $dx_tracked_changed os_dx_auto_endgame_off}
            }
            {dx_state_pos_tracker}
            DX_BOT_SETTINGS_DATA
            {set $previous_state dxState_BotSettings}
         )
         ((os_dx_bot_2_on os_dx_bot_2_off)
            {set $dx_bot_2 {! $dx_bot_2}}
            {if_else $dx_bot_2
               {set $dx_tracked_changed os_dx_bot_2_on}
               {set $dx_tracked_changed os_dx_bot_2_off}
            }
            {dx_state_pos_tracker}
            DX_BOT_SETTINGS_DATA
            {set $previous_state dxState_BotSettings}
         ) 
         ((os_dx_bot_3_on os_dx_bot_3_off)
            {set $dx_bot_3 {! $dx_bot_3}}
            {if_else $dx_bot_3
               {set $dx_tracked_changed os_dx_bot_3_on}
               {set $dx_tracked_changed os_dx_bot_3_off}
            }
            {dx_state_pos_tracker}
            DX_BOT_SETTINGS_DATA
            {set $previous_state dxState_BotSettings}
         ) 
         ((os_dx_bot_4_on os_dx_bot_4_off)
            {set $dx_bot_4 {! $dx_bot_4}}
            {if_else $dx_bot_4
               {set $dx_tracked_changed os_dx_bot_4_on}
               {set $dx_tracked_changed os_dx_bot_4_off}
            }
            {dx_state_pos_tracker}
            DX_BOT_SETTINGS_DATA
            {set $previous_state dxState_BotSettings}
         ) 
         ((os_dx_bot_5_on os_dx_bot_5_off)
            {set $dx_bot_5 {! $dx_bot_5}}
            {if_else $dx_bot_5
               {set $dx_tracked_changed os_dx_bot_5_on}
               {set $dx_tracked_changed os_dx_bot_5_off}
            }
            {dx_state_pos_tracker}
            DX_BOT_SETTINGS_DATA
            {set $previous_state dxState_BotSettings}
         )
      }
      {set $in_state FALSE}
      DX_BOT_SETTINGS_DATA
      {set $previous_state dxState_BotSettings}
   )
   (BUTTON_DOWN_MSG
      {if_else {find_elem ("instruments.sld") {$this focus_name}}
         {switch $action
            ((kAction_Confirm kAction_Cancel)
               {{$this find {$this focus_name}} confirm}
               {{$this find {$this focus_name}} set_showing FALSE}
               {if_else $dx_slider
                  {do
                     {$this set_focus $current_list}
                  }
                  {$this set_focus $current_list}
               }
            )
            kDataUnhandled
         }
         kDataUnhandled
      }
   )
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user}
   )
   (SCROLL_MSG
      {$this on_slider_change $component $user}
   )
   (exit 
      {set $dx_slider FALSE}
      {dx_state_pos_tracker}
   )
	(on_cancel
      {$this show_options}
   )
)