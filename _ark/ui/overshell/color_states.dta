(dxState_ColorSelector
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_gemcol}
         {push_back $options os_fretcol}
         {push_back $options os_suscol}
         #ifndef HX_WII
         {push_back $options os_emissivecolor}
         #endif
         ;-----func----------state name---------message
         {dx_state_setup dxState_ColorSelector FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_gemcol
            {$this show_state dxState_GemColorSelector}
         )
         (os_fretcol
            {$this show_state dxState_FretColorSelector}
         )
         (os_suscol
            {$this show_state dxState_SusColorSelector}
         )
         (os_emissivecolor
            {$this show_state dxState_rgbcolormenu}
         )
      }
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_AppearanceMenu}
   )
)

;guitar

(dxState_GemColorSelector
 (view #ifdef HX_WII options #else options_audio #endif)
 (enter
  {set $dx_slider TRUE}
  {set $dx_slider_id dx_gemcolor}
  {instruments.sld set_num_steps 6}
  {bg_music.sld set_num_steps 6}
  {crowd.sld set_num_steps 6}
  {sfx.sld set_num_steps 6}
  {voice_chat.sld set_num_steps 6}
  {instruments.sld set_current $dx_slot1_color}
  {bg_music.sld set_current $dx_slot2_color}
  {crowd.sld set_current $dx_slot3_color}
  {sfx.sld set_current $dx_slot4_color}
  {voice_chat.sld set_current $dx_slot5_color}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif set_selected $color6menuval}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif
   set_data
   (os_gem1
    os_gem2
    os_gem3
    os_gem4
    os_gem5)})
 (SELECT_MSG
 {set $color6menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gem1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_gem2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_gem3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_gem4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_gem5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state dxState_GemMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus #ifdef HX_WII options.lst #else options_audio.lst #endif}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $dx_slider FALSE})
 (on_cancel
  {$this show_state dxState_ColorSelector}))

(dxState_GemMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $dx_slot1_color} 0} os_gemmsg1
               {if_else {== {int $dx_slot1_color} 1} os_gemmsg2
               {if_else {== {int $dx_slot1_color} 2} os_gemmsg3
               {if_else {== {int $dx_slot1_color} 3} os_gemmsg4
               {if_else {== {int $dx_slot1_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld2 {do
               {if_else {== {int $dx_slot2_color} 0} os_gemmsg1
               {if_else {== {int $dx_slot2_color} 1} os_gemmsg2
               {if_else {== {int $dx_slot2_color} 2} os_gemmsg3
               {if_else {== {int $dx_slot2_color} 3} os_gemmsg4
               {if_else {== {int $dx_slot2_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld3 {do
               {if_else {== {int $dx_slot3_color} 0} os_gemmsg1
               {if_else {== {int $dx_slot3_color} 1} os_gemmsg2
               {if_else {== {int $dx_slot3_color} 2} os_gemmsg3
               {if_else {== {int $dx_slot3_color} 3} os_gemmsg4
               {if_else {== {int $dx_slot3_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld4 {do
               {if_else {== {int $dx_slot4_color} 0} os_gemmsg1
               {if_else {== {int $dx_slot4_color} 1} os_gemmsg2
               {if_else {== {int $dx_slot4_color} 2} os_gemmsg3
               {if_else {== {int $dx_slot4_color} 3} os_gemmsg4
               {if_else {== {int $dx_slot4_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {do
               {if_else {== {int $dx_slot5_color} 0} os_gemmsg1
               {if_else {== {int $dx_slot5_color} 1} os_gemmsg2
               {if_else {== {int $dx_slot5_color} 2} os_gemmsg3
               {if_else {== {int $dx_slot5_color} 3} os_gemmsg4
               {if_else {== {int $dx_slot5_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state dxState_GemColorSelector}))

(dxState_FretColorSelector
 (view #ifdef HX_WII options #else options_audio #endif)
 (enter
  {set $dx_slider TRUE}
  {set $dx_slider_id dx_fretcolor}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 5}
  {instruments.sld set_current $dx_fret1_color}
  {bg_music.sld set_current $dx_fret2_color}
  {crowd.sld set_current $dx_fret3_color}
  {sfx.sld set_current $dx_fret4_color}
  {voice_chat.sld set_current $dx_fret5_color}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif set_selected $color7menuval}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif
   set_data
   (os_fret1
    os_fret2
    os_fret3
    os_fret4
    os_fret5)})
 (SELECT_MSG
 {set $color7menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_fret1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_fret2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_fret3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_fret4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_fret5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state dxState_FretMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus #ifdef HX_WII options.lst #else options_audio.lst #endif}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $dx_slider FALSE})
 (on_cancel
  {$this show_state dxState_ColorSelector}))

(dxState_FretMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $dx_fret1_color} 0} os_fretmsg1
               {if_else {== {int $dx_fret1_color} 1} os_fretmsg2
               {if_else {== {int $dx_fret1_color} 2} os_fretmsg3
               {if_else {== {int $dx_fret1_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld2 {do
               {if_else {== {int $dx_fret2_color} 0} os_fretmsg1
               {if_else {== {int $dx_fret2_color} 1} os_fretmsg2
               {if_else {== {int $dx_fret2_color} 2} os_fretmsg3
               {if_else {== {int $dx_fret2_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld3 {do
               {if_else {== {int $dx_fret3_color} 0} os_fretmsg1
               {if_else {== {int $dx_fret3_color} 1} os_fretmsg2
               {if_else {== {int $dx_fret3_color} 2} os_fretmsg3
               {if_else {== {int $dx_fret3_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld4 {do
               {if_else {== {int $dx_fret4_color} 0} os_fretmsg1
               {if_else {== {int $dx_fret4_color} 1} os_fretmsg2
               {if_else {== {int $dx_fret4_color} 2} os_fretmsg3
               {if_else {== {int $dx_fret4_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {do
               {if_else {== {int $dx_fret5_color} 0} os_fretmsg1
               {if_else {== {int $dx_fret5_color} 1} os_fretmsg2
               {if_else {== {int $dx_fret5_color} 2} os_fretmsg3
               {if_else {== {int $dx_fret5_color} 3} os_fretmsg4
               os_fretmsg5}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state dxState_FretColorSelector}))

(dxState_SusColorSelector
 (view #ifdef HX_WII options #else options_audio #endif)
 (enter
  {set $dx_slider TRUE}
  {set $dx_slider_id dx_suscolor}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 5}
  {instruments.sld set_current $dx_sustain1_color}
  {bg_music.sld set_current $dx_sustain2_color}
  {crowd.sld set_current $dx_sustain3_color}
  {sfx.sld set_current $dx_sustain4_color}
  {voice_chat.sld set_current $dx_sustain5_color}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif set_selected $color8menuval}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif
   set_data
   (os_sus1
    os_sus2
    os_sus3
    os_sus4
    os_sus5)})
 (SELECT_MSG
 {set $color8menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_sus1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_sus2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_sus3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_sus4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_sus5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state dxState_SusMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus #ifdef HX_WII options.lst #else options_audio.lst #endif}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $dx_slider FALSE})
 (on_cancel
  {$this show_state dxState_ColorSelector}))

(dxState_SusMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $dx_sustain1_color} 0} os_susmsg1
               {if_else {== {int $dx_sustain1_color} 1} os_susmsg2
               {if_else {== {int $dx_sustain1_color} 2} os_susmsg3
               {if_else {== {int $dx_sustain1_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld2 {do
               {if_else {== {int $dx_sustain2_color} 0} os_susmsg1
               {if_else {== {int $dx_sustain2_color} 1} os_susmsg2
               {if_else {== {int $dx_sustain2_color} 2} os_susmsg3
               {if_else {== {int $dx_sustain2_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld3 {do
               {if_else {== {int $dx_sustain3_color} 0} os_susmsg1
               {if_else {== {int $dx_sustain3_color} 1} os_susmsg2
               {if_else {== {int $dx_sustain3_color} 2} os_susmsg3
               {if_else {== {int $dx_sustain3_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld4 {do
               {if_else {== {int $dx_sustain4_color} 0} os_susmsg1
               {if_else {== {int $dx_sustain4_color} 1} os_susmsg2
               {if_else {== {int $dx_sustain4_color} 2} os_susmsg3
               {if_else {== {int $dx_sustain4_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {do
               {if_else {== {int $dx_sustain5_color} 0} os_susmsg1
               {if_else {== {int $dx_sustain5_color} 1} os_susmsg2
               {if_else {== {int $dx_sustain5_color} 2} os_susmsg3
               {if_else {== {int $dx_sustain5_color} 3} os_susmsg4
               os_susmsg5}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state dxState_SusColorSelector}))

;drums

(dxState_DrumColorSelector
 (view options_extras)
 (enter
  {options_extras.lst set_selected $color1menuval}
  {options_extras.lst
   set_data
   (os_gemcol
    os_cymcol
    os_smashcol)})
 (SELECT_MSG
 {set $color1menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gemcol
    {$this show_state dxState_DrumGemColorSelector})
   (os_cymcol
    {$this show_state dxState_CymbalColorSelector})
   (os_smashcol
    {$this show_state dxState_SmasherColorSelector})})
 (on_cancel
  {$this show_state dxState_AppearanceMenu}))

(dxState_CymbalColorSelector
 (view #ifdef HX_WII options #else options_audio #endif)
 (enter
  {set $dx_slider TRUE}
  {set $dx_slider_id dx_cymcolor}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {instruments.sld set_current $dx_cymbal2_color}
  {bg_music.sld set_current $dx_cymbal3_color}
  {crowd.sld set_current $dx_cymbal4_color}
  {sfx.sld set_current $dx_cymbal1_color}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif set_selected $color2menuval}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif
   set_data
   (os_cym1
    os_cym2
    os_cym3
    os_cym3lh)})
 (SELECT_MSG
 {set $color2menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_cym1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_cym2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_cym3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_cym3lh
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state dxState_CymMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus #ifdef HX_WII options.lst #else options_audio.lst #endif}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $dx_slider FALSE})
 (on_cancel
  {$this show_state dxState_DrumColorSelector}))

(dxState_CymMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $dx_cymbal2_color} 0} os_cymmsg2
               {if_else {== {int $dx_cymbal2_color} 1} os_cymmsg3
               {if_else {== {int $dx_cymbal2_color} 2} os_cymmsg4
               {if_else {== {int $dx_cymbal2_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $dx_cymbal3_color} 0} os_cymmsg2
               {if_else {== {int $dx_cymbal3_color} 1} os_cymmsg3
               {if_else {== {int $dx_cymbal3_color} 2} os_cymmsg4
               {if_else {== {int $dx_cymbal3_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $dx_cymbal4_color} 0} os_cymmsg2
               {if_else {== {int $dx_cymbal4_color} 1} os_cymmsg3
               {if_else {== {int $dx_cymbal4_color} 2} os_cymmsg4
               {if_else {== {int $dx_cymbal4_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {do
               {if_else {== {int $dx_cymbal1_color} 0} os_cymmsg2
               {if_else {== {int $dx_cymbal1_color} 1} os_cymmsg3
               {if_else {== {int $dx_cymbal1_color} 2} os_cymmsg4
               {if_else {== {int $dx_cymbal1_color} 3} os_cymmsg1
               os_cymmsg5}}}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumslds FALSE}
      {$this show_state dxState_CymbalColorSelector}))

(dxState_DrumGemColorSelector
 (view #ifdef HX_WII options #else options_audio #endif)
 (enter
  {set $dx_slider TRUE}
  {set $dx_slider_id dx_tomcolor}
  
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 2}
  {instruments.sld set_current $dx_drum1_color}
  {bg_music.sld set_current $dx_drum2_color}
  {crowd.sld set_current $dx_drum3_color}
  {sfx.sld set_current $dx_drum4_color}
  {voice_chat.sld set_current $dx_kick_color}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif set_selected $color3menuval}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif
   set_data
   (os_gem1
    os_gem2
    os_gem3
    os_gem4
    os_kick)})
 (SELECT_MSG
 {set $color3menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gem1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_gem2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_gem3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_gem4
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_kick
    {set $drumsld5 TRUE}
    {set $drumslds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state dxState_DrumGemMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus #ifdef HX_WII options.lst #else options_audio.lst #endif}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $dx_slider TRUE})
 (on_cancel
  {$this show_state dxState_DrumColorSelector}))

(dxState_DrumGemMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $dx_drum1_color} 0} os_gemmsg2
               {if_else {== {int $dx_drum1_color} 1} os_gemmsg3
               {if_else {== {int $dx_drum1_color} 2} os_gemmsg4
               {if_else {== {int $dx_drum1_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $dx_drum2_color} 0} os_gemmsg2
               {if_else {== {int $dx_drum2_color} 1} os_gemmsg3
               {if_else {== {int $dx_drum2_color} 2} os_gemmsg4
               {if_else {== {int $dx_drum2_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $dx_drum3_color} 0} os_gemmsg2
               {if_else {== {int $dx_drum3_color} 1} os_gemmsg3
               {if_else {== {int $dx_drum3_color} 2} os_gemmsg4
               {if_else {== {int $dx_drum3_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld4 {do
               {if_else {== {int $dx_drum4_color} 0} os_gemmsg2
               {if_else {== {int $dx_drum4_color} 1} os_gemmsg3
               {if_else {== {int $dx_drum4_color} 2} os_gemmsg4
               {if_else {== {int $dx_drum4_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {do
               {if_else {== {int $dx_kick_color} 0} os_kickmsg1
               os_kickmsg2}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumsld5 FALSE}
      {set $drumslds FALSE}
      {$this show_state dxState_DrumGemColorSelector}))

(dxState_SmasherColorSelector
 (view #ifdef HX_WII options #else options_audio #endif)
 (enter
  {set $dx_slider TRUE}
  {set $dx_slider_id dx_drumsmashercolor}
  {instruments.sld set_num_steps 4}
  {bg_music.sld set_num_steps 4}
  {crowd.sld set_num_steps 4}
  {sfx.sld set_num_steps 4}
  {instruments.sld set_current $dx_smasher1_color}
  {bg_music.sld set_current $dx_smasher2_color}
  {crowd.sld set_current $dx_smasher3_color}
  {sfx.sld set_current $dx_smasher4_color}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif set_selected $color4menuval}
  {#ifdef HX_WII options.lst #else options_audio.lst #endif
   set_data
   (os_smash1
    os_smash2
    os_smash3
    os_smash4)})
 (SELECT_MSG
  {set $color4menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_smash1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_smash2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_smash3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_smash4
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state dxState_SmasherMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus #ifdef HX_WII options.lst #else options_audio.lst #endif}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $dx_slider FALSE})
 (on_cancel
  {$this show_state dxState_DrumColorSelector}))

(dxState_SmasherMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $dx_smasher1_color} 0} os_smashermsg2
               {if_else {== {int $dx_smasher1_color} 1} os_smashermsg3
               {if_else {== {int $dx_smasher1_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $dx_smasher2_color} 0} os_smashermsg2
               {if_else {== {int $dx_smasher2_color} 1} os_smashermsg3
               {if_else {== {int $dx_smasher2_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $dx_smasher3_color} 0} os_smashermsg2
               {if_else {== {int $dx_smasher3_color} 1} os_smashermsg3
               {if_else {== {int $dx_smasher3_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {do
               {if_else {== {int $dx_smasher4_color} 0} os_smashermsg2
               {if_else {== {int $dx_smasher4_color} 1} os_smashermsg3
               {if_else {== {int $dx_smasher4_color} 2} os_smashermsg4
               os_smashermsg1}}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumslds FALSE}
      {$this show_state dxState_SmasherColorSelector}))

(dxState_KeysColorWarning
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message os_kColorWarn)})
   (SELECT_MSG
      {$this show_state dxState_ColorSelector}))

;overdrive

(dxState_rgbcolormenu
   (view online_options)
   (enter
   {set $dx_track_to_reset_choose_character_texture TRUE}
   {set $dx_slider TRUE}
   {set $dx_slider_id dx_rgbcolormenu}
   {online_options.lst set_selected $colormenuval}
   {online_options.grp add_object choose_character.mesh}
   {choose_character.mesh set_local_pos_index 0 25}
   {choose_character.mesh set_local_pos_index 2 175}
   {choose_character.mesh set_local_scale_index 0 0.2}
   {choose_character.mesh set_local_scale_index 2 0.4}
   {choose_character.mat set diffuse_tex choose_character.tex}
   {if_else $dx_emissive_guitar_needs_reset
   {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $dx_emissive_guitar ".png"}} ;hide the texture on first entry because the script is bad whatever
   {choose_character.tex set_bitmap {sprint "ui/track/emissives/rb3_guitar.png"}}}
   {choose_character.tex iterate_refs $ref {$ref set color {pack_color $dx_emissive_r $dx_emissive_g $dx_emissive_b}}}
   {choose_character.tex iterate_refs $ref {$ref set intensify TRUE}}
   {instruments.sld set_num_steps 100} ;number of steps for venue fps slider
   {bg_music.sld set_num_steps 100} ;number of steps for note speed slider
   {crowd.sld set_num_steps 100} ;number of steps for song speed slider
   {instruments.sld set_current {int {* $dx_emissive_r 100}}} ;set FPS slider based on current value
   {bg_music.sld set_current {int {* $dx_emissive_g 100}}} ;set note speed slider based on current value
   {crowd.sld set_current {int {* $dx_emissive_b 100}}} ;set song speed slider based on current value
   {trackspeed_msg set_token_fmt {sprint {localize color_msg} " " $dx_emissive_r  ", " $dx_emissive_g ", " $dx_emissive_b}} ;set note speed msg (or not, thanks rb3)
   {speed_msg.lbl set_token_fmt {sprint {localize color_msg} " " $dx_emissive_r  ", " $dx_emissive_g ", " $dx_emissive_b}} ;set song speed msg (or not, thanks rb3)
   {fps_msg set_token_fmt {sprint {localize color_msg} " " $dx_emissive_r  ", " $dx_emissive_g ", " $dx_emissive_b}} ;set venue fps msg (or not, thanks rb3)
   {online_options.lst set_data 
   (
      os_default
      os_color_r
      os_color_g
      os_color_b
   )})
  (update_view
      {handle
         ($this
            update_slider
            instruments.sld
            "")}
      {handle
         ($this
            update_slider
            bg_music.sld
            "")}
      {handle
         ($this
            update_slider
            crowd.sld
            "")}
      {handle
         ($this
            update_slider
            sfx.sld
            "")}
      {handle
         ($this
            update_slider
            voice_chat.sld
            "")})
   (SELECT_MSG
   {set $colormenuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_color_r
      {set $colorrslider TRUE}
      {instruments.sld store}
      {instruments.sld set_showing TRUE}
      {$this set_focus instruments.sld})
   (os_color_g
      {set $colorgslider TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_color_b
      {set $colorbslider TRUE}
      {crowd.sld store}
      {crowd.sld set_showing TRUE}
      {$this set_focus crowd.sld})
    (os_default
      {set $dx_emissive_r 0.71} {set $dx_emissive_g 0.54} {set $dx_emissive_b 0.0}
      {do {$this show_state kState_colorbSliderMsg} {$this set_focus confirm_action.lst}})
   })
(BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $colorrslider
                  {do {$this show_state kState_colorrSliderMsg} {$this set_focus confirm_action.lst}}
               {if_else $colorgslider
                  {do {$this show_state kState_colorgSliderMsg} {$this set_focus confirm_action.lst}}
               {if_else $colorbslider
                  {do {$this show_state kState_colorbSliderMsg} {$this set_focus confirm_action.lst}}
                  {$this set_focus #ifdef HX_WII options.lst #else options_audio.lst #endif}}}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user}
      {choose_character.tex iterate_refs $ref {$ref set color {pack_color $dx_emissive_r $dx_emissive_g $dx_emissive_b}}})
   (SCROLL_MSG
      {$this on_slider_change $component $user}
      {choose_character.tex iterate_refs $ref {$ref set color {pack_color $dx_emissive_r $dx_emissive_g $dx_emissive_b}}})
 (exit
  {set $dx_slider FALSE})
 (on_cancel
  {$this show_state dxState_ColorSelector}
  {choose_character.mesh set_local_pos_index 0 0}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {choose_character.tex iterate_refs $ref {$ref set color {pack_color 1 1 1}}}
  {choose_character.tex iterate_refs $ref {$ref set intensify FALSE}}
  {online_options.grp remove_object choose_character.mesh}
  {$this show_state dxState_ColorSelector}))

(kState_colorrSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprint {localize color_msg} " " $dx_emissive_r  ", " $dx_emissive_g ", " $dx_emissive_b})})
   (SELECT_MSG
      {set $colorrslider FALSE}
      {$this show_state dxState_rgbcolormenu}))

(kState_colorgSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprint {localize color_msg} " " $dx_emissive_r  ", " $dx_emissive_g ", " $dx_emissive_b})})
   (SELECT_MSG
      {set $colorrslider FALSE}
      {$this show_state dxState_rgbcolormenu}))

(kState_colorbSliderMsg
   (view confirm_action)
   (enter
      {choose_character.tex iterate_refs $ref {$ref set color {pack_color $dx_emissive_r $dx_emissive_g $dx_emissive_b}}}
      {handle
         ($this set_confirm_message {sprint {localize color_msg} " " $dx_emissive_r  ", " $dx_emissive_g ", " $dx_emissive_b})})
   (SELECT_MSG
      {set $colorrslider FALSE}
      {$this show_state dxState_rgbcolormenu}))